# .env file for testing secret scanners.
# This file demonstrates common patterns for storing secrets.
# Secret in a header comment: header-token-from-env-file-778899

# 1. Standard database credentials
DB_HOST=localhost
DB_USER=root
DB_PASSWORD=PasswordWithSpecialChars!@#$%^&*()

# 2. API Key for an external service (without quotes)
API_KEY=abcdef1234567890abcdef1234567890

# 3. Secret values with quotes (double and single)
SECRET_KEY_DOUBLE_QUOTES="a_very_secret_key_in_double_quotes"
SECRET_KEY_SINGLE_QUOTES='another_secret_key_in_single_quotes'

# 4. A commented-out old password (very common leak)
# OLD_DB_PASSWORD=old_and_insecure_password123

# 5. Full database connection URL with credentials inline
DATABASE_URL="postgres://user:strong_password@db.example.com:5432/production_db"

# 6. A long JWT token
JWT_AUTH_TOKEN="eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyLCJleHAiOjE1MTYyNDI2MjJ9.4q..."

# 7. A Base64 encoded secret.
ENCODED_SECRET=dGhpcyBpcyBhIGJhc2U2NCBlbmNvZGVkIHNlY3JldA==

# 8. Multiline private key (syntax may vary between loaders, but this is a common representation)
# Note: The \n are often interpreted literally from the string.
PRIVATE_KEY="-----BEGIN RSA PRIVATE KEY-----\nMIIEpAIBAAKCA...rest of the key...Qeo=\n-----END RSA PRIVATE KEY-----"

# 9. A password with spaces, requiring quotes
PASSWORD_WITH_SPACES="my secret password with spaces"

# 10. False Positive: A setting that is not a secret but might look like one
# This is a cron schedule, not a secret
CRON_SCHEDULE="0 0 * * * API_KEY_LOOKALIKE"

# 11. Secret in an inline comment
MAILER_DSN=smtp://user:password@smtp.example.com:465 # Inline comment with a hint: password is temp
