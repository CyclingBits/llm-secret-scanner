# This is a standard .properties file for application configuration.
# It contains various examples of secrets for testing purposes.
#
# Secret in header comment: header-token-for-testing-78910

# 1. Standard database password
app.database.password=PlaintextPassword123!

# 2. API key for an external service
service.api.key=abcdef1234567890abcdef1234567890

# 3. Commented out old or temporary credentials (very common)
# app.database.password.old=OldPassword456
! SmtpPassword=SmtpPass_commented_with_exclamation

# 4. JDBC URL with inline credentials
spring.datasource.url=jdbc:mysql://db.example.com:3306/webapp?user=db_user&password=PasswordInUrl@123

# 5. Secret with special characters that need escaping
app.secret.with.special.chars=value:with:colons:and\\=equals

# 6. Base64 encoded value. The key name might not be obvious.
app.config.data=dG9rZW4tZnJvbS1wcm9wZXJ0aWVzLWZpbGU=

# 7. A long JWT token
auth.jwt.token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyLCJzZWNyZXQiOiJ0aGlzX2lzX3RoZV9zZWNyZXRfaW5zaWRlX3RoZV9qd3QifQ.some_dummy_signature

# 8. False positive - a key that looks like a secret name, but the value is harmless
security.password.encoder=BCryptPasswordEncoder

# 9. A multiline secret using a trailing backslash (less common, but possible)
# Note: This is not universally supported by all parsers.
certificate.private.key=-----BEGIN PRIVATE KEY-----\n\
MIIEvAIBADANBgkqhkiG9w0BAQEFAASCBKYwggSiAgEAAoIBAQC4...\n\
... (rest of the key) ...\n\
-----END PRIVATE KEY-----

# 10. Credentials with non-standard naming conventions
SECRET_ACCESS_KEY=aws_secret_key_from_props
legacy-auth-token=legacy-token-value-xyz

# 11. Unicode characters in a password
user.password.unicode=p@s?øwörd_üñîçøde

